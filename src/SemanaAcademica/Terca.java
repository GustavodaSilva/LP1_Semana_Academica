package SemanaAcademica;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ALUNOS
 */
public class Terca extends javax.swing.JFrame {

    /**
     * Creates new form Terca
     */
    public String nome;
    public String palestra;
    public Terca() 
    {
        initComponents();
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Terça-Feira");

        jButton3.setText("Sair");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("<html>\n<p>\n\t\t\t\t\t\tNesta palestra Roberto nos introduz à fatos que muitas vezes são ignorados durante o desenvolvimento ou reparo de algum software, ele tras a tona a forma comumente vista de identação dos códigos mas que deve ser eliminada do cotidiano de um programador.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\tA palestra se inicia com uma demonstração do panorama atual, mostrando a forma comum de se pensar e trabalhar, baseado no principio de entrega de projetos no menor período de tempo. Estes profissionais que trabalham desta forma muitas vezes passam por itens simples e básicos para a criação de um bom programa, até mesmo ignorando testes mais completos na aplicação.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tUm fato importante é que estes erros não são exclusividade de uma linguagem, estes erros são comuns em todas as linguagens utilizadas atualmente, isto é dado principalmente por métodos ultrapassados utilizados pelos profissionais, que ignoram praticas como a cultura DevOps, que tem como objetivo fornecer uma apresentação limpa dos códigos para facilitar a localização de problemas e para agilizar no momento da necessidade de um update ou da correção de algum bug.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tOutra observação de grande valor demonstrada na palestra foi a necessidade de cortar o costume de replicação de códigos, pois um bug no “código pai” será passado para os demais códigos, assim podendo ampliar o alcance do problema acarretando em maiores dificuldades para a correção destas falhas, que podem até mesmo impossibilitar a utilização da aplicação pelo usuário. Este problema pode ser resolvido de uma maneira simples, mantendo os códigos limpos e realizando testes completos que eliminem a possibilidade de uma falha chegar ao produto final que será utilizado pelo cliente. Nestes casos é sempre importante inserir comentários no código, assim mostrando o que cada etapa do processo faz ou deveria fazer, facilitando no momento de uma possível correção ou melhoria.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tUma das dicas mais valiosas apresentadas por Roberto é a analise da situação, isso evita que o programador simplesmente “vomite” os códigos, pois ele irá entender a necessidade desta aplicação e sua aplicação, assim fazendo com que o programador se direcione para um ponto especifico e se prepare para programar as funções que a aplicação deverá executar.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tA simplicidade no código também foi muitas vezes abordada, especialmente em projetos com previsão de “vida útil” longa e em projetos feitos com uma equipe. Esta simplicidade segue o principio de manter o código limpo, facilitando a interpretação e trabalho com este código. Uma prática para manter esta simplificação e clareza do código é seguir os 3 pilares de orientação à objetos apresentados por Roberto: Encapsulamento, Herança e Polimorfismo. Seguir estes pilares irá garantir uma melhor interpretação do código, facilitando para quem irá trabalhar com ele.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPara concluirmos, Roberto nos apresenta a ideia do “software como uma arte” onde a ideia é tratar o software com a delicadeza e a atenção que é tratada uma obra de arte, sempre atento aos detalhes e sempre mantendo a clareza na visibilidade, novamente é ressaltado a necessidade de praticarmos bons hábitos quando criarmos ou modificarmos algum código, sempre mantendo-o simples e com a maior clareza possível, algo que deixe as funções “expostas” e fácil de se trabalhar. Uma observação final é a maior dica entre todas, “Leia o máximo que puder”, somente a leitura irá lhe agregar conhecimentos mais profundos, literaturas especificas podem apresentar novas funções e novos métodos para se chegar ao resultado, muitas vezes de forma mais rápida e simples que a maneira convencional.\n\t\t\t\t\t</p>\n\n</html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Terca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Terca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Terca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Terca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Terca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
